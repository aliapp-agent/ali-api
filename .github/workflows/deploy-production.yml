name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch: {}

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: us-central1
  SERVICE_NAME: ali-api-production
  ARTIFACT_REGISTRY_REPO: ali-api-repo

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker $GCP_REGION-docker.pkg.dev

      - name: Build and Deploy to Production
        run: |
          gcloud builds submit \
            --config cloudbuild.yaml \
            --substitutions _REGION=$GCP_REGION,_SERVICE_NAME=$SERVICE_NAME,_APP_ENV=production \
            --region $GCP_REGION

      - name: Verify production deployment
        run: |
          SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$GCP_REGION --format='value(status.url)')
          echo "Production service deployed at: $SERVICE_URL"

          # Wait for service to be ready
          sleep 60

          # Test health endpoint
          curl -f "$SERVICE_URL/health" || exit 1
          echo "‚úÖ Production health check passed"

          # Test API docs (should be disabled in production)
          if curl -f "$SERVICE_URL/docs" 2>/dev/null; then
            echo "‚ö†Ô∏è  Warning: API docs are accessible in production"
          else
            echo "‚úÖ API docs properly disabled in production"
          fi

          echo "üéâ Production deployment successful!"
          echo "Service URL: $SERVICE_URL"
          echo "Deployed commit: ${{ github.sha }}"
