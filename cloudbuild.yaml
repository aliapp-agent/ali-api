# Cloud Build configuration for Ali API
#
# Este arquivo define o processo de build e deploy contínuo para a Ali API,
# automatizando a construção da imagem Docker, o envio para o Artifact Registry
# e o deploy no Cloud Run.
#
# Para executar, use o comando:
# gcloud builds submit --config=cloudbuild.yaml --region=us-central1

steps:
  # Passo 1: Construir a imagem do contêiner
  # Constrói a imagem Docker a partir do Dockerfile na raiz do projeto.
  # Duas tags são criadas: uma com o ID do build (para rastreabilidade) e a 'latest'.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--no-cache'
      - '--pull'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/ali-api:${BUILD_ID}'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/ali-api:latest'
      - '.'
    env:
      - 'APP_ENV=${_APP_ENV}'

  # Passo 2: Enviar a imagem para o Artifact Registry
  # Publica a imagem construída no repositório do Artifact Registry.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/ali-api'

  # Passo 3: Fazer o deploy no Cloud Run
  # Implanta a nova versão da imagem no serviço do Cloud Run.
  # Configura recursos, variáveis de ambiente e segredos.
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/ali-api:${BUILD_ID}'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--max-instances'
      - '10'
      - '--min-instances'
      - '1'
      - '--timeout'
      - '900'
      - '--port'
      - '8080'
      - '--set-env-vars'
      - >-
        APP_ENV=${_APP_ENV}^PROJECT_ID=${PROJECT_ID}^QDRANT_URL=${_QDRANT_URL}^
        FIREBASE_PROJECT_ID=${PROJECT_ID}^FIREBASE_STORAGE_BUCKET=${PROJECT_ID}.appspot.com^
        FIREBASE_REGION=${_FIREBASE_REGION}^FIREBASE_CREDENTIALS_PATH=/secrets/firebase-credentials.json^
        LLM_MODEL=${_LLM_MODEL}^DEFAULT_LLM_TEMPERATURE=${_DEFAULT_LLM_TEMPERATURE}^
        MAX_TOKENS=${_MAX_TOKENS}^MAX_LLM_CALL_RETRIES=${_MAX_LLM_CALL_RETRIES}^
        RAG_INDEX_NAME=${_RAG_INDEX_NAME}^RAG_EMBEDDING_MODEL=${_RAG_EMBEDDING_MODEL}^
        RAG_CHUNK_SIZE=${_RAG_CHUNK_SIZE}^RAG_CHUNK_OVERLAP=${_RAG_CHUNK_OVERLAP}^
        RAG_MAX_RESULTS=${_RAG_MAX_RESULTS}^QDRANT_COLLECTION_NAME=${_QDRANT_COLLECTION_NAME}^
        EVOLUTION_INSTANCE=${_EVOLUTION_INSTANCE}^AGNO_MEMORY_PATH=${_AGNO_MEMORY_PATH}^
        ALLOWED_ORIGINS=${_ALLOWED_ORIGINS}^DEBUG=${_DEBUG}^LOG_LEVEL=${_LOG_LEVEL}^
        LOG_FORMAT=${_LOG_FORMAT}^JWT_ALGORITHM=${_JWT_ALGORITHM}^
        JWT_ACCESS_TOKEN_EXPIRE_DAYS=${_JWT_ACCESS_TOKEN_EXPIRE_DAYS}^
        RATE_LIMIT_DEFAULT=${_RATE_LIMIT_DEFAULT}^RATE_LIMIT_CHAT=${_RATE_LIMIT_CHAT}^
        RATE_LIMIT_CHAT_STREAM=${_RATE_LIMIT_CHAT_STREAM}^RATE_LIMIT_MESSAGES=${_RATE_LIMIT_MESSAGES}^
        RATE_LIMIT_REGISTER=${_RATE_LIMIT_REGISTER}^RATE_LIMIT_LOGIN=${_RATE_LIMIT_LOGIN}^
        RATE_LIMIT_ROOT=${_RATE_LIMIT_ROOT}^RATE_LIMIT_HEALTH=${_RATE_LIMIT_HEALTH}^
        LANGFUSE_HOST=${_LANGFUSE_HOST}^LANGFUSE_PUBLIC_KEY=${_LANGFUSE_PUBLIC_KEY}
      - '--set-secrets'
      - >-
        LLM_API_KEY=${_SECRET_LLM_API_KEY}:latest,JWT_SECRET_KEY=${_SECRET_JWT_SECRET_KEY}:latest,
        QDRANT_API_KEY=${_SECRET_QDRANT_API_KEY}:latest,FIREBASE_CREDENTIALS=${_SECRET_FIREBASE_CREDENTIALS}:latest,
        LANGFUSE_SECRET_KEY=${_SECRET_LANGFUSE_SECRET_KEY}:latest,EVOLUTION_API_URL=${_SECRET_EVOLUTION_API_URL}:latest,
        EVOLUTION_API_KEY=${_SECRET_EVOLUTION_API_KEY}:latest

# Substituições padrão. Podem ser sobrescritas no comando `gcloud builds submit`.
substitutions:
  # Infraestrutura GCP
  _REGION: 'us-central1'
  _ARTIFACT_REGISTRY_REPO: 'ali-api-repo'
  _SERVICE_NAME: 'ali-api-production'

  # Configurações da Aplicação
  _APP_ENV: 'production'
  _DEBUG: 'false'

  # Referências do Secret Manager
  _SECRET_LLM_API_KEY: 'ali-llm-api-key'
  _SECRET_JWT_SECRET_KEY: 'ali-jwt-secret-key'
  _SECRET_QDRANT_API_KEY: 'ali-qdrant-api-key'
  _SECRET_FIREBASE_CREDENTIALS: 'ali-firebase-credentials'
  _SECRET_LANGFUSE_SECRET_KEY: 'ali-langfuse-secret-key'
  _SECRET_EVOLUTION_API_URL: 'ali-evolution-api-url'
  _SECRET_EVOLUTION_API_KEY: 'ali-evolution-api-key'

  # Serviços Externos
  _QDRANT_URL: 'https://a7ec9a98-1327-4fe0-869d-e33b52d4a498.us-east4-0.gcp.cloud.qdrant.io'
  _QDRANT_COLLECTION_NAME: 'aguas_claras'

  # Configurações do Firebase
  _FIREBASE_REGION: 'us-central1'

  # Configuração do LLM
  _LLM_MODEL: 'gpt-4o-mini'
  _DEFAULT_LLM_TEMPERATURE: '0.2'
  _MAX_TOKENS: '2000'
  _MAX_LLM_CALL_RETRIES: '3'

  # Configuração do RAG
  _RAG_INDEX_NAME: 'aguas_claras'
  _RAG_EMBEDDING_MODEL: 'sentence-transformers/all-MiniLM-L6-v2'
  _RAG_CHUNK_SIZE: '1000'
  _RAG_CHUNK_OVERLAP: '200'
  _RAG_MAX_RESULTS: '5'

  # Configurações de CORS (Produção) - Evolution API público e privado
  _ALLOWED_ORIGINS: 'http://35.226.139.80,http://10.128.0.3'

  # Configuração de Logging
  _LOG_LEVEL: 'INFO'
  _LOG_FORMAT: 'json'

  # Configuração do JWT
  _JWT_ALGORITHM: 'HS256'
  _JWT_ACCESS_TOKEN_EXPIRE_DAYS: '30'

  # Limites de Taxa (Valores de Produção)
  _RATE_LIMIT_DEFAULT: '5000 per day,500 per hour'
  _RATE_LIMIT_CHAT: '200 per minute'
  _RATE_LIMIT_CHAT_STREAM: '100 per minute'
  _RATE_LIMIT_MESSAGES: '200 per minute'
  _RATE_LIMIT_REGISTER: '10 per hour'
  _RATE_LIMIT_LOGIN: '30 per minute'
  _RATE_LIMIT_ROOT: '100 per minute'
  _RATE_LIMIT_HEALTH: '500 per minute'

  # Observabilidade (Langfuse)
  _LANGFUSE_HOST: 'https://cloud.langfuse.com'
  _LANGFUSE_PUBLIC_KEY: 'your-langfuse-public-key' # Substitua pela sua chave pública real

  # Configurações Evolution API/WhatsApp
  _EVOLUTION_INSTANCE: 'Ali-app-evolution'
  
  # Configurações AgnoAgent
  _AGNO_MEMORY_PATH: '/app/data/agent.db'


# Opções de build
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
