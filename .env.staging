# Ali API - Staging Environment Configuration
# 
# This environment mirrors production but with relaxed settings for testing.
# Use this for pre-production validation and testing.

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
APP_ENV=staging
PROJECT_NAME=Ali API (Staging)
VERSION=1.0.0
DESCRIPTION=Staging environment for Ali API testing
API_V1_STR=/api/v1
DEBUG=true  # Enabled for debugging in staging

# =============================================================================
# DATABASE SETTINGS - STAGING CLOUD SQL
# =============================================================================
# Google Cloud SQL PostgreSQL instance (staging)
POSTGRES_URL=postgresql://ali_user_staging:REPLACE_WITH_STAGING_PASSWORD@/ali_db_staging?host=/cloudsql/YOUR_PROJECT_ID:YOUR_REGION:YOUR_STAGING_INSTANCE
POSTGRES_PASSWORD=REPLACE_WITH_STAGING_PASSWORD
POSTGRES_POOL_SIZE=10  # Smaller pool for staging
POSTGRES_MAX_OVERFLOW=5

# SQLite for Agno agent memory
AGNO_MEMORY_PATH=/app/data/agno_memory_staging.db

# =============================================================================
# LLM CONFIGURATION
# =============================================================================
# OpenAI API Configuration - REPLACE WITH ACTUAL API KEY
LLM_API_KEY=sk-REPLACE_WITH_STAGING_OPENAI_API_KEY
LLM_MODEL=gpt-4o-mini
DEFAULT_LLM_TEMPERATURE=0.2
MAX_TOKENS=2000
MAX_LLM_CALL_RETRIES=3

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================
# JWT Configuration - Use different secret from production
JWT_SECRET_KEY=REPLACE_WITH_STAGING_SECRET_KEY_DIFFERENT_FROM_PRODUCTION
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_DAYS=30  # Longer for testing convenience

# =============================================================================
# LANGFUSE OBSERVABILITY
# =============================================================================
LANGFUSE_PUBLIC_KEY=pk-lf-REPLACE_WITH_STAGING_PUBLIC_KEY
LANGFUSE_SECRET_KEY=sk-lf-REPLACE_WITH_STAGING_SECRET_KEY
LANGFUSE_HOST=https://cloud.langfuse.com

# =============================================================================
# CORS SETTINGS - STAGING DOMAINS
# =============================================================================
ALLOWED_ORIGINS=https://ali-frontend-staging.vercel.app,https://staging.ali-app.com,http://localhost:3000

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
LOG_DIR=/app/logs
LOG_LEVEL=INFO  # More verbose for staging testing
LOG_FORMAT=console  # Human readable for staging

# =============================================================================
# RATE LIMITING - STAGING VALUES (MORE RELAXED)
# =============================================================================
RATE_LIMIT_DEFAULT=2000 per day,500 per hour

# Specific endpoint rate limits (staging - relaxed for testing)
RATE_LIMIT_CHAT=100 per minute
RATE_LIMIT_CHAT_STREAM=50 per minute
RATE_LIMIT_MESSAGES=200 per minute
RATE_LIMIT_REGISTER=20 per hour
RATE_LIMIT_LOGIN=50 per minute
RATE_LIMIT_ROOT=100 per minute
RATE_LIMIT_HEALTH=200 per minute

# =============================================================================
# ELASTICSEARCH CONFIGURATION
# =============================================================================
# Staging Elasticsearch instance
ELASTICSEARCH_URL=https://staging-elasticsearch-cluster.es.region.gcp.elastic.cloud:443
ELASTICSEARCH_API_KEY=REPLACE_WITH_STAGING_ELASTICSEARCH_API_KEY
ELASTICSEARCH_TIMEOUT=30
ELASTICSEARCH_MAX_RETRIES=3

# RAG Configuration
RAG_INDEX_NAME=ali-api-documents-staging
RAG_EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
RAG_CHUNK_SIZE=1000
RAG_CHUNK_OVERLAP=200
RAG_MAX_RESULTS=5

# =============================================================================
# EVALUATION CONFIGURATION
# =============================================================================
EVALUATION_LLM=gpt-4o-mini
EVALUATION_BASE_URL=https://api.openai.com/v1
EVALUATION_API_KEY=REPLACE_WITH_STAGING_EVALUATION_API_KEY
EVALUATION_SLEEP_TIME=5  # Slower for staging to avoid rate limits

# =============================================================================
# STAGING SPECIFIC SETTINGS
# =============================================================================
# Enable more debugging and testing features
ENABLE_REQUEST_LOGGING=true  # Enabled for staging debugging
DISABLE_HTTPS_REDIRECT=true  # May be disabled for local testing

# Database settings
RESET_DB_ON_STARTUP=false  # Usually false, but can be true for testing

# Development helpers
PYTHONWARNINGS=default  # Show warnings in staging

# =============================================================================
# MONITORING AND OBSERVABILITY
# =============================================================================
# Enable full monitoring in staging
ENABLE_METRICS=true
METRICS_PORT=9090

# Health check configuration
HEALTH_CHECK_TIMEOUT=15  # More lenient timeout
DEEP_HEALTH_CHECK_ENABLED=true

# =============================================================================
# CLOUD RUN SPECIFIC (if deploying to Cloud Run)
# =============================================================================
PORT=8000
CLOUD_RUN_SERVICE_NAME=ali-api-staging

# =============================================================================
# TESTING AND VALIDATION
# =============================================================================
# Enable testing features
ENABLE_TEST_ENDPOINTS=true
ENABLE_DEBUG_ENDPOINTS=true
ALLOW_CORS_ALL_ORIGINS=false  # Keep false for security

# =============================================================================
# RESOURCE LIMITS (SMALLER FOR STAGING)
# =============================================================================
# Smaller limits to save costs
MAX_MEMORY_MB=2048
MAX_CPU_CORES=1
MAX_CONCURRENT_REQUESTS=50

# =============================================================================
# FEATURE FLAGS
# =============================================================================
# Test new features in staging first
FEATURE_RAG_ENABLED=true
FEATURE_STREAMING_ENABLED=true
FEATURE_EVALUATION_ENABLED=true
FEATURE_METRICS_ENABLED=true
FEATURE_EXPERIMENTAL_ENABLED=true  # Enable experimental features

# =============================================================================
# STAGING TESTING CONFIGURATION
# =============================================================================
# Test data and fixtures
ENABLE_TEST_DATA=true
TEST_USER_EMAIL=staging-test@example.com
TEST_SESSION_PREFIX=staging-test-

# Performance testing
ENABLE_LOAD_TESTING=true
LOAD_TEST_MAX_USERS=10

# =============================================================================
# NOTIFICATIONS AND ALERTS
# =============================================================================
# Staging environment notifications
SLACK_WEBHOOK_URL=REPLACE_WITH_STAGING_SLACK_WEBHOOK
ALERT_EMAIL=staging-alerts@your-domain.com
ENABLE_STAGING_ALERTS=true

# =============================================================================
# STAGING SPECIFIC NOTES
# =============================================================================
# 1. This environment should mirror production as closely as possible
# 2. Use separate database and Elasticsearch instances from production
# 3. Test all production changes here first
# 4. Use real but separate API keys and secrets from production
# 5. Enable additional logging and debugging features
# 6. Deploy automatically from develop branch
# 7. Reset or refresh data periodically for clean testing