[tool:pytest]
# Test discovery patterns
python_files = test_*.py *_test.py tests.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum version
minversion = 7.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=70
    --no-cov-on-fail
    --maxfail=5
    --durations=10

# Markers for test categorization
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    auth: marks tests related to authentication
    database: marks tests related to database operations
    rag: marks tests related to RAG functionality
    health: marks tests related to health checks
    api: marks tests related to API endpoints
    security: marks tests related to security features
    
# Asyncio configuration
asyncio_mode = auto

# Log configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warning filters
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ImportWarning
    # Ignore specific warnings from dependencies
    ignore:.*deprecated.*:DeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Environment variables for testing
env =
    APP_ENV = test
    POSTGRES_URL = sqlite:///test.db
    JWT_SECRET_KEY = test-secret-key-for-testing-only
    LLM_API_KEY = test-llm-key
    ELASTICSEARCH_URL = http://localhost:9200
    ELASTICSEARCH_API_KEY = test-es-key
    RAG_INDEX_NAME = test-index
    RAG_EMBEDDING_MODEL = sentence-transformers/all-MiniLM-L6-v2